---

Checks: '*,
  cppcoreguidelines-*, -cppcoreguidelines-avoid-c-arrays, -cppcoreguidelines-pro-type-reinterpret-cast,
  modernize-*, -modernize-deprecated-headers, -modernize-avoid-c-arrays,
  hicpp-*, -hicpp-deprecated-headers, -hicpp-avoid-c-arrays,
  fuchsia-*, -fuchsia-trailing-return,
  -llvm-header-guard,
  -readability-redundant-access-specifiers,
  -hicpp-no-assembler,
  
  -cppcoreguidelines-pro-type-cstyle-cast,
  -hicpp-signed-bitwise,
  -cppcoreguidelines-pro-type-vararg,
  -hicpp-vararg,

  -cppcoreguidelines-pro-type-member-init, -hicpp-member-init,
  -cppcoreguidelines-pro-bounds-array-to-pointer-decay, -hicpp-no-array-decay,
  -cppcoreguidelines-pro-bounds-pointer-arithmetic,

  -llvmlibc-callee-namespace, -llvmlibc-implementation-in-namespace, -llvmlibc-implementation-in-namespace
'

#CheckOptions:
#  - { key: readability-identifier-naming.NamespaceCase,       value: lower_case }
#  - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
#  - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
#  - { key: readability-identifier-naming.FunctionCase,        value: lower_case }
#  - { key: readability-identifier-naming.VariableCase,        value: lower_case }
#  - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }